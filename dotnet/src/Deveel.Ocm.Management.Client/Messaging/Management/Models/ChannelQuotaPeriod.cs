// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Management.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for ChannelQuotaPeriod.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(ChannelQuotaPeriodConverter))]
    public struct ChannelQuotaPeriod : System.IEquatable<ChannelQuotaPeriod>
    {
        private ChannelQuotaPeriod(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly ChannelQuotaPeriod None = "none";

        public static readonly ChannelQuotaPeriod Day = "day";

        public static readonly ChannelQuotaPeriod Month = "month";

        public static readonly ChannelQuotaPeriod Year = "year";


        /// <summary>
        /// Underlying value of enum ChannelQuotaPeriod
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for ChannelQuotaPeriod
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type ChannelQuotaPeriod
        /// </summary>
        public bool Equals(ChannelQuotaPeriod e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to ChannelQuotaPeriod
        /// </summary>
        public static implicit operator ChannelQuotaPeriod(string value)
        {
            return new ChannelQuotaPeriod(value);
        }

        /// <summary>
        /// Implicit operator to convert ChannelQuotaPeriod to string
        /// </summary>
        public static implicit operator string(ChannelQuotaPeriod e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum ChannelQuotaPeriod
        /// </summary>
        public static bool operator == (ChannelQuotaPeriod e1, ChannelQuotaPeriod e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum ChannelQuotaPeriod
        /// </summary>
        public static bool operator != (ChannelQuotaPeriod e1, ChannelQuotaPeriod e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for ChannelQuotaPeriod
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is ChannelQuotaPeriod && Equals((ChannelQuotaPeriod)obj);
        }

        /// <summary>
        /// Returns for hashCode ChannelQuotaPeriod
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
