// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Management.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PageResultOfTerminalAssignmentRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PageResultOfTerminalAssignmentRequest class.
        /// </summary>
        public PageResultOfTerminalAssignmentRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PageResultOfTerminalAssignmentRequest class.
        /// </summary>
        public PageResultOfTerminalAssignmentRequest(PageRequest request, int totalItems, int totalPages, IList<TerminalAssignmentRequest> items = default(IList<TerminalAssignmentRequest>), string self = default(string), string first = default(string), string next = default(string), string previous = default(string), string last = default(string))
        {
            Request = request;
            TotalItems = totalItems;
            Items = items;
            TotalPages = totalPages;
            Self = self;
            First = first;
            Next = next;
            Previous = previous;
            Last = last;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "request")]
        public PageRequest Request { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalItems")]
        public int TotalItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "items")]
        public IList<TerminalAssignmentRequest> Items { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalPages")]
        public int TotalPages { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "self")]
        public string Self { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first")]
        public string First { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "next")]
        public string Next { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "previous")]
        public string Previous { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last")]
        public string Last { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Request == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Request");
            }
            if (Request != null)
            {
                Request.Validate();
            }
            if (Items != null)
            {
                foreach (var element in Items)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
