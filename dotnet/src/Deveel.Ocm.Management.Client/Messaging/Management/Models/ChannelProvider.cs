// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Management.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for ChannelProvider.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(ChannelProviderConverter))]
    public struct ChannelProvider : System.IEquatable<ChannelProvider>
    {
        private ChannelProvider(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly ChannelProvider Other = "other";

        public static readonly ChannelProvider Twilio = "twilio";

        public static readonly ChannelProvider Sendgrid = "sendgrid";

        public static readonly ChannelProvider Sendinblue = "sendinblue";

        public static readonly ChannelProvider Facebook = "facebook";

        public static readonly ChannelProvider Deveel = "deveel";

        public static readonly ChannelProvider Linkmobility = "linkmobility";

        public static readonly ChannelProvider Mailjet = "mailjet";

        public static readonly ChannelProvider Telegram = "telegram";


        /// <summary>
        /// Underlying value of enum ChannelProvider
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for ChannelProvider
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type ChannelProvider
        /// </summary>
        public bool Equals(ChannelProvider e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to ChannelProvider
        /// </summary>
        public static implicit operator ChannelProvider(string value)
        {
            return new ChannelProvider(value);
        }

        /// <summary>
        /// Implicit operator to convert ChannelProvider to string
        /// </summary>
        public static implicit operator string(ChannelProvider e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum ChannelProvider
        /// </summary>
        public static bool operator == (ChannelProvider e1, ChannelProvider e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum ChannelProvider
        /// </summary>
        public static bool operator != (ChannelProvider e1, ChannelProvider e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for ChannelProvider
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is ChannelProvider && Equals((ChannelProvider)obj);
        }

        /// <summary>
        /// Returns for hashCode ChannelProvider
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
