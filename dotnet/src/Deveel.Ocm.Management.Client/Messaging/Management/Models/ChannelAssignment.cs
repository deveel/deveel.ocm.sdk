// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Management.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The explicit assignment of a channel to a tenant
    /// </summary>
    public partial class ChannelAssignment
    {
        /// <summary>
        /// Initializes a new instance of the ChannelAssignment class.
        /// </summary>
        public ChannelAssignment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ChannelAssignment class.
        /// </summary>
        /// <param name="channelId">The unique identifier of the instance of
        /// the channel
        /// assigned to the tenant</param>
        /// <param name="tenantId">The unique identifier of the tenant assigned
        /// with the channel</param>
        /// <param name="timeStamp">The exact time of the assignment</param>
        public ChannelAssignment(string channelId, string tenantId = default(string), System.DateTimeOffset? timeStamp = default(System.DateTimeOffset?))
        {
            ChannelId = channelId;
            TenantId = tenantId;
            TimeStamp = timeStamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique identifier of the instance of the channel
        /// assigned to the tenant
        /// </summary>
        [JsonProperty(PropertyName = "channelId")]
        public string ChannelId { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the tenant assigned with the
        /// channel
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets the exact time of the assignment
        /// </summary>
        [JsonProperty(PropertyName = "timeStamp")]
        public System.DateTimeOffset? TimeStamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ChannelId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ChannelId");
            }
        }
    }
}
