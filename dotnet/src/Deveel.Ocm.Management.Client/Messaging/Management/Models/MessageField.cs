// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Management.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for MessageField.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(MessageFieldConverter))]
    public struct MessageField : System.IEquatable<MessageField>
    {
        private MessageField(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly MessageField Subject = "subject";

        public static readonly MessageField Body = "body";

        public static readonly MessageField Context = "context";


        /// <summary>
        /// Underlying value of enum MessageField
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for MessageField
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type MessageField
        /// </summary>
        public bool Equals(MessageField e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to MessageField
        /// </summary>
        public static implicit operator MessageField(string value)
        {
            return new MessageField(value);
        }

        /// <summary>
        /// Implicit operator to convert MessageField to string
        /// </summary>
        public static implicit operator string(MessageField e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum MessageField
        /// </summary>
        public static bool operator == (MessageField e1, MessageField e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum MessageField
        /// </summary>
        public static bool operator != (MessageField e1, MessageField e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for MessageField
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is MessageField && Equals((MessageField)obj);
        }

        /// <summary>
        /// Returns for hashCode MessageField
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
