// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Management.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies secure credentials for the authentication
    /// of channels towards providers
    /// </summary>
    public partial class ChannelCredentials
    {
        /// <summary>
        /// Initializes a new instance of the ChannelCredentials class.
        /// </summary>
        public ChannelCredentials()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ChannelCredentials class.
        /// </summary>
        public ChannelCredentials(ApiKeyCredentials apiKey = default(ApiKeyCredentials), BasicAuthCredentials basic = default(BasicAuthCredentials), OAuthCredentials oAuth = default(OAuthCredentials))
        {
            ApiKey = apiKey;
            Basic = basic;
            OAuth = oAuth;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apiKey")]
        public ApiKeyCredentials ApiKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "basic")]
        public BasicAuthCredentials Basic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oAuth")]
        public OAuthCredentials OAuth { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ApiKey != null)
            {
                ApiKey.Validate();
            }
            if (Basic != null)
            {
                Basic.Validate();
            }
            if (OAuth != null)
            {
                OAuth.Validate();
            }
        }
    }
}
