// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for AttachmentType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(AttachmentTypeConverter))]
    public struct AttachmentType : System.IEquatable<AttachmentType>
    {
        private AttachmentType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly AttachmentType Inline = "inline";

        public static readonly AttachmentType File = "file";


        /// <summary>
        /// Underlying value of enum AttachmentType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for AttachmentType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type AttachmentType
        /// </summary>
        public bool Equals(AttachmentType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to AttachmentType
        /// </summary>
        public static implicit operator AttachmentType(string value)
        {
            return new AttachmentType(value);
        }

        /// <summary>
        /// Implicit operator to convert AttachmentType to string
        /// </summary>
        public static implicit operator string(AttachmentType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum AttachmentType
        /// </summary>
        public static bool operator == (AttachmentType e1, AttachmentType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum AttachmentType
        /// </summary>
        public static bool operator != (AttachmentType e1, AttachmentType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for AttachmentType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is AttachmentType && Equals((AttachmentType)obj);
        }

        /// <summary>
        /// Returns for hashCode AttachmentType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
