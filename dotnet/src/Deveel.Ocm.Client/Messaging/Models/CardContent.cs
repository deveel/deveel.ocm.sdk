// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Deveel.Messaging.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A formatted card content of a message
    /// </summary>
    public partial class CardContent
    {
        /// <summary>
        /// Initializes a new instance of the CardContent class.
        /// </summary>
        public CardContent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CardContent class.
        /// </summary>
        /// <param name="title">The title displayed on the card</param>
        /// <param name="subtitle">An optional subtitle displayed on the
        /// card</param>
        public CardContent(MessageContent body, string title = default(string), string subtitle = default(string), MessageContent footer = default(MessageContent))
        {
            Title = title;
            Subtitle = subtitle;
            Body = body;
            Footer = footer;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the title displayed on the card
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets an optional subtitle displayed on the card
        /// </summary>
        [JsonProperty(PropertyName = "subtitle")]
        public string Subtitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "body")]
        public MessageContent Body { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "footer")]
        public MessageContent Footer { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Body == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Body");
            }
            if (Body != null)
            {
                Body.Validate();
            }
            if (Footer != null)
            {
                Footer.Validate();
            }
        }
    }
}
