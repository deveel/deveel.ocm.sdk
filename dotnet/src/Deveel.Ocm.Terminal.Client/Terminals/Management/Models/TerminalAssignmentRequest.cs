// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Deveel.Messaging.Terminals.Management.Models
{
    /// <summary> The TerminalAssignmentRequest. </summary>
    public partial class TerminalAssignmentRequest
    {
        /// <summary> Initializes a new instance of TerminalAssignmentRequest. </summary>
        /// <param name="terminal"></param>
        /// <param name="requester"></param>
        /// <param name="timeStamp"></param>
        /// <param name="id"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="terminal"/>, <paramref name="requester"/> or <paramref name="id"/> is null. </exception>
        internal TerminalAssignmentRequest(RequestedTerminal terminal, string requester, DateTimeOffset timeStamp, string id)
        {
            Argument.AssertNotNull(terminal, nameof(terminal));
            Argument.AssertNotNull(requester, nameof(requester));
            Argument.AssertNotNull(id, nameof(id));

            Terminal = terminal;
            Requester = requester;
            TimeStamp = timeStamp;
            Id = id;
        }

        /// <summary> Initializes a new instance of TerminalAssignmentRequest. </summary>
        /// <param name="terminal"></param>
        /// <param name="requester"></param>
        /// <param name="timeStamp"></param>
        /// <param name="response"></param>
        /// <param name="id"></param>
        /// <param name="assignment"></param>
        internal TerminalAssignmentRequest(RequestedTerminal terminal, string requester, DateTimeOffset timeStamp, TerminalAssignmentResponse response, string id, TerminalAssignment assignment)
        {
            Terminal = terminal;
            Requester = requester;
            TimeStamp = timeStamp;
            Response = response;
            Id = id;
            Assignment = assignment;
        }

        /// <summary> Gets the terminal. </summary>
        public RequestedTerminal Terminal { get; }
        /// <summary> Gets the requester. </summary>
        public string Requester { get; }
        /// <summary> Gets the time stamp. </summary>
        public DateTimeOffset TimeStamp { get; }
        /// <summary> Gets the response. </summary>
        public TerminalAssignmentResponse Response { get; }
        /// <summary> Gets the id. </summary>
        public string Id { get; }
        /// <summary> Gets the assignment. </summary>
        public TerminalAssignment Assignment { get; }
    }
}
