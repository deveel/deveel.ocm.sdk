{
  "openapi": "3.0.3",
  "info": {
    "title": "Deveel OCM API",
    "version": "v1",
    "description": "Specifications of the Deveel Omni-Channel Messaging API v1",
    "contact": {
      "name": "Antonello Provenzano",
      "email": "antonello@deveel.com"
    },
    "license": {
      "name": "Deveel EULA",
      "url": "https://docs.ocm.deveel.net/LICENSE.html"
    },
    "x-logo": {
      "url": "https://github.com/deveel/deveel.ocm.openapi-docs/raw/main/deveel-logo.png"
    }
  },
  "servers": [
    {
      "url": "https://api.ocm.deveel.net"
    }
  ],
  "paths": {
    "/message/batch": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "Sends a batch of Messages",
        "operationId": "message_batchSend",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageBatch"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageBatch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageBatch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageBatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "All the messages in the batch were accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatchResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatchResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBatchResult"
                }
              }
            }
          },
          "400": {
            "description": "One of the messages in the batch has invalid elements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "The request is unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "The requested action is forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "A channel or a terminal referenced in one of the messages was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "One of the channels is not enabled for the tenant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Too many messages in the batch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "A media in one of the messages is not supported by the channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "send:message"
            ]
          }
        ]
      }
    },
    "/message/": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "Sends a single Message",
        "operationId": "message_send",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "The message is under processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResult"
                }
              }
            }
          },
          "400": {
            "description": "The message has invalid elements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "The request is unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "The requested action is forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "A channel or a server terminal referenced in the message was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "405": {
            "description": "One of the channels is not enabled or does not allow outbound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "A media item in the message is not supported by the channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "send:message"
            ]
          }
        ]
      }
    },
    "/message/received/{id}": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "Gets a Received Message from Cache",
        "operationId": "message_getReceived",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The message was found in cache",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundMessage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InboundMessage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InboundMessage"
                }
              }
            }
          },
          "400": {
            "description": "The message is not inbound"
          },
          "401": {
            "description": "The request is unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "The requested action is forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The message was not found"
          }
        },
        "security": [
          {
            "oauth2": [
              "message:receiver"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://deveel.eu.auth0.com/oauth/token",
            "scopes": {
              "send:message": "Send messages or batch of messages to individuals",
              "receive:message": "Receive messages from individuals"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://deveel.eu.auth0.com/authorize",
            "tokenUrl": "https://deveel.eu.auth0.com/oauth/token",
            "scopes": {
              "send:message": "Send messages or batch of messages to individuals",
              "receive:message": "Receive messages from individuals"
            }
          }
        }
      }
    },
    "schemas": {
      "Attachment": {
        "required": [
          "content",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier (within the context of the message)\r\nof the attachment"
          },
          "content": {
            "type": "string",
            "description": "The base-64 encoded content of the attachment"
          },
          "contentType": {
            "type": "string",
            "description": "Specifies the MIME type of the content of the attachment",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "The file name of the attachment",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AttachmentType"
          }
        },
        "description": "A single attachment to a message or to the part of a message"
      },
      "AttachmentType": {
        "enum": [
          "inline",
          "file"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "AttachmentType",
          "modelAsString": true
        }
      },
      "ButtonContent": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "minLength": 3,
            "type": "string",
            "description": "The text displayed on the button"
          },
          "reply": {
            "minLength": 3,
            "type": "string",
            "description": "The reply sent back from the receiver when clicking the button",
            "nullable": true
          },
          "dial": {
            "type": "string",
            "description": "A telephone number dialed when the button is clicked by\r\nthe receiver of the message",
            "format": "tel",
            "nullable": true
          },
          "openUrl": {
            "type": "string",
            "description": "A URL address that is opened on the browser of the receiver\r\nwhen the button is clicked",
            "format": "uri",
            "nullable": true
          },
          "displayLocation": {
            "$ref": "#/components/schemas/DisplayLocation"
          },
          "shareLocation": {
            "type": "boolean",
            "description": "When the button is clicked the device shares the current location\r\nof the receiver to the sender of the message",
            "nullable": true
          }
        },
        "description": "A button content of a message"
      },
      "CardContent": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 3,
            "type": "string",
            "description": "The title displayed on the card",
            "nullable": true
          },
          "subtitle": {
            "type": "string",
            "description": "An optional subtitle displayed on the card",
            "nullable": true
          },
          "body": {
            "$ref": "#/components/schemas/MessageContent"
          },
          "footer": {
            "$ref": "#/components/schemas/MessageContent"
          }
        },
        "description": "A formatted card content of a message"
      },
      "ChannelType": {
        "enum": [
          "sms",
          "messenger",
          "whatsapp",
          "email",
          "viber",
          "rcs",
          "push",
          "telegram",
          "sandbox"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ChannelType",
          "modelAsString": true
        }
      },
      "ContentPart": {
        "type": "object",
        "properties": {
          "html": {
            "minLength": 1,
            "type": "string",
            "description": "The HTML base-64 encoded content of the part",
            "nullable": true
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "The simple textual content of the part",
            "nullable": true
          },
          "attachments": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "description": "A list of embedded attachments in the message part",
            "nullable": true
          }
        },
        "description": "A single part of a multi-parted message"
      },
      "DisplayLocation": {
        "required": [
          "lat",
          "lon"
        ],
        "type": "object",
        "properties": {
          "lon": {
            "type": "number",
            "description": "The longitude of the location point",
            "format": "double"
          },
          "lat": {
            "type": "number",
            "description": "The latitude of the location point",
            "format": "double"
          },
          "description": {
            "minLength": 3,
            "type": "string",
            "description": "An optional description of the location to display",
            "nullable": true
          }
        },
        "description": "The specifications of the location to\r\ndisplay when a button is clicked"
      },
      "EmailAddress": {
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "format": "email"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FallbackMessage": {
        "required": [
          "channel",
          "content",
          "receiver"
        ],
        "type": "object",
        "properties": {
          "sender": {
            "$ref": "#/components/schemas/SenderTerminal"
          },
          "channel": {
            "type": "string",
            "description": "The name of the channel that is used to transport the message"
          },
          "options": {
            "type": "object",
            "additionalProperties": {},
            "description": "Configuration options for modeling the behavior of the channel\r\nwhen transporting the message",
            "nullable": true
          },
          "fallback": {
            "$ref": "#/components/schemas/FallbackMessage"
          },
          "receiver": {
            "$ref": "#/components/schemas/Terminal"
          },
          "content": {
            "$ref": "#/components/schemas/MessageContent"
          }
        },
        "additionalProperties": {},
        "description": "Represents a message is activated when a previous one\r\nfailed to be delivered to a receipient"
      },
      "FallbackMessageResult": {
        "required": [
          "messageId"
        ],
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "description": "The unique identifier of the message within the system"
          },
          "fallback": {
            "$ref": "#/components/schemas/FallbackMessageResult"
          }
        },
        "description": "The result to the request to send a fallback message"
      },
      "InboundMessage": {
        "required": [
          "content",
          "receiver",
          "sender",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/MessageChannel"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "$ref": "#/components/schemas/Terminal"
          },
          "receiver": {
            "$ref": "#/components/schemas/Terminal"
          },
          "content": {
            "$ref": "#/components/schemas/MessageContent"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "context": {
            "type": "object",
            "additionalProperties": {},
            "description": "A custom-defined context of the message (typically used to correlate).",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "description": "An inbound message sent from an individual"
      },
      "MediaContent": {
        "required": [
          "source",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MediaType"
          },
          "contentType": {
            "type": "string",
            "description": "The MIME type of the media file sent",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "The URL to the storage where the media is located\r\nand can be retrieved by the system and forwarded",
            "format": "uri"
          }
        },
        "description": "Details the media content of a message"
      },
      "MediaType": {
        "enum": [
          "unknown",
          "file",
          "image",
          "audio",
          "video"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "MediaType",
          "modelAsString": true
        }
      },
      "Message": {
        "required": [
          "channel",
          "content",
          "receiver"
        ],
        "type": "object",
        "properties": {
          "sender": {
            "$ref": "#/components/schemas/SenderTerminal"
          },
          "channel": {
            "type": "string",
            "description": "The name of the channel that is used to transport the message"
          },
          "options": {
            "type": "object",
            "additionalProperties": {},
            "description": "Configuration options for modeling the behavior of the channel\r\nwhen transporting the message",
            "nullable": true
          },
          "fallback": {
            "$ref": "#/components/schemas/FallbackMessage"
          },
          "receiver": {
            "$ref": "#/components/schemas/Terminal"
          },
          "content": {
            "$ref": "#/components/schemas/MessageContent"
          },
          "context": {
            "type": "object",
            "additionalProperties": {},
            "description": "A custom-defined context of the message (typically used to correlate).",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "description": "A single outbound omni-channel message"
      },
      "MessageBatch": {
        "required": [
          "messages"
        ],
        "type": "object",
        "properties": {
          "context": {
            "maxLength": 50,
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "description": "A context that is provided to the batch: messages within the batch\r\nwill inherit this when they don't specify one explicitly",
            "nullable": true
          },
          "messages": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": "The list of messages included in the batch"
          }
        },
        "description": "A batch of messages sent in one single operation"
      },
      "MessageBatchResult": {
        "required": [
          "batchId"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "description": "The unique identifier of the batch within the system"
          },
          "context": {
            "type": "object",
            "additionalProperties": {},
            "description": "The context that was specified when requesting to send\r\nthe batch (for correlation)",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageResult"
            },
            "description": "The list of results of the messages contained in the batch",
            "nullable": true
          }
        },
        "description": "The result to the request to enqueue a batch of messages"
      },
      "MessageChannel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the channel instance"
          },
          "type": {
            "$ref": "#/components/schemas/ChannelType"
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the channel instance",
            "nullable": true
          }
        },
        "description": "Specifies the channel instance used to send \r\nor receive a message"
      },
      "MessageContent": {
        "type": "object",
        "properties": {
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "Simple textual content",
            "nullable": true
          },
          "html": {
            "minLength": 1,
            "type": "string",
            "description": "The content of the message is HTML base-64 encoded text",
            "nullable": true
          },
          "attach": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "description": "Attachments embedded in the message alognside the textual content (simple or HTML)",
            "nullable": true
          },
          "media": {
            "$ref": "#/components/schemas/MediaContent"
          },
          "parts": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentPart"
            },
            "description": "The content of the message is multi-parted (typical of e-mail channels)",
            "nullable": true
          },
          "card": {
            "$ref": "#/components/schemas/CardContent"
          },
          "button": {
            "$ref": "#/components/schemas/ButtonContent"
          }
        },
        "description": "Represents the content of a message"
      },
      "MessageResult": {
        "required": [
          "messageId"
        ],
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "description": "The unique identifier of the message within the system"
          },
          "context": {
            "type": "object",
            "additionalProperties": {},
            "description": "The context provided when requesting the enqueue of the message (for correlation)",
            "nullable": true
          },
          "fallback": {
            "$ref": "#/components/schemas/FallbackMessageResult"
          }
        },
        "description": "The result of to the request to enqueue a message"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "SenderTerminal": {
        "type": "object",
        "properties": {
          "label": {
            "minLength": 2,
            "pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
            "type": "string",
            "description": "The sender is an alpha-numeric label",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The identifier of a terminal provisioned to the tenant",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "email": {
            "$ref": "#/components/schemas/EmailAddress"
          },
          "number": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "conversation": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "description": "A terminal used to send messages to receivers (typically from a server application)"
      },
      "Terminal": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "email": {
            "$ref": "#/components/schemas/EmailAddress"
          },
          "number": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "conversation": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      }
    }
  }
}